"""Create database

Revision ID: 433b3e8ebf2a
Revises: 
Create Date: 2023-12-07 13:54:26.983749

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '433b3e8ebf2a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tournaments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('total_matches', sa.Integer(), nullable=True),
    sa.Column('total_rounds', sa.Integer(), nullable=True),
    sa.Column('is_started', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('competitors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('tournament_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'tournament_id', name='name_tournament_uc')
    )
    op.create_table('matches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('round', sa.Integer(), nullable=True),
    sa.Column('match_number', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('tournament_id', sa.Integer(), nullable=True),
    sa.Column('competitor_one_id', sa.Integer(), nullable=True),
    sa.Column('competitor_two_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['competitor_one_id'], ['competitors.id'], ),
    sa.ForeignKeyConstraint(['competitor_two_id'], ['competitors.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('podium',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=True),
    sa.Column('first_place_id', sa.Integer(), nullable=True),
    sa.Column('second_place_id', sa.Integer(), nullable=True),
    sa.Column('third_place_id', sa.Integer(), nullable=True),
    sa.Column('fourth_place_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['first_place_id'], ['competitors.id'], ),
    sa.ForeignKeyConstraint(['fourth_place_id'], ['competitors.id'], ),
    sa.ForeignKeyConstraint(['second_place_id'], ['competitors.id'], ),
    sa.ForeignKeyConstraint(['third_place_id'], ['competitors.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=True),
    sa.Column('winner_id', sa.Integer(), nullable=True),
    sa.Column('loser_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['loser_id'], ['competitors.id'], ),
    sa.ForeignKeyConstraint(['match_id'], ['matches.id'], ),
    sa.ForeignKeyConstraint(['winner_id'], ['competitors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('results')
    op.drop_table('podium')
    op.drop_table('matches')
    op.drop_table('competitors')
    op.drop_table('tournaments')
    # ### end Alembic commands ###
